#!/bin/bash

if [ $# -lt 10 ]; then
  echo "Usage: $0 <count> <last> <beta> <mass> <MH> <start> nsteps:{<outer> <inner> <gauge>} <time>"
  exit 1
fi

# Input parameters
count=$1
last=$2
beta=$3
mass=$4
MH=$5
start=$6
outer=$7
inner=$8
gauge=$9
time=${10}

# Adjustable parameters
node=32
cpus=512
Nf=12
L=32
Nt=16
ratio=-0.25
traj_length=1
Ntraj=10

# Common parameters for all jobs
echo "#!/bin/sh" > temp
echo "#PBS -q normal" >> temp
echo "#PBS -l nodes=$node:ppn=16:native" >> temp
echo "#PBS -l walltime=$time" >> temp
echo "#PBS -j oe" >> temp
echo "#PBS -o job.\$PBS_JOBID.out" >> temp
echo "#PBS -N HMC${L}nt${Nt}_b${beta}_m$mass.$start" >> temp
echo "#PBS -M daschaich@gmail.com" >> temp
echo "#PBS -m ae" >> temp
echo "#PBS -A TG-PHY120002" >> temp
echo "#PBS -V" >> temp

dir=/oasis/scratch/dschaich/temp_project/KS_nHYP_FA/Run_new${Nf}_${L}$Nt
bin=/oasis/scratch/dschaich/temp_project/su3_hmc
cd $dir
echo "cd $dir" >> temp

# Write all evolution tasks to run in a single job
iter=0
for(( i="$count" ; $i<=$last ; i++ )); do
  next=$[$i + 1]
  iter=$[$iter + 1]
  out=$dir/Out/out_${start}_${L}${Nt}_${beta}_${ratio}_$mass.$i
  lat=$dir/Configs/gauge_${L}${Nt}_${beta}_${ratio}_${mass}_$start

  echo "echo \"Job \$PBS_JOBNAME started \"\`date\`\" jobid \$PBS_JOBID\" >> $out" >> temp
  echo "echo \"=== Running MPI application on $cpus cpus ===\" >> $out" >> temp
  echo "echo \"mpirun_rsh -hostfile \$PBS_NODEFILE -np $cpus MV2_NUM_HCAS=1 MV2_IBA_HCA=mlx4_0 $bin\" >> $out" >> temp
  echo "mpirun_rsh -hostfile \$PBS_NODEFILE -np $cpus MV2_NUM_HCAS=1 MV2_IBA_HCA=mlx4_0 $bin << EOF  >> $out" >> temp
  echo "prompt 0" >> temp
  echo "nflavors $Nf" >> temp
  echo "nx $L" >> temp
  echo "ny $L" >> temp
  echo "nz $L" >> temp
  echo "nt $Nt" >> temp
  echo "iseed ${last}${beta/\./41}${L}$i" >> temp

  echo "warms 0" >> temp
  echo "trajecs $Ntraj" >> temp
  echo "traj_length $traj_length" >> temp
  echo "number_of_PF 2" >> temp
  echo "nstep $outer" >> temp
  echo "nstep $inner" >> temp
  echo "nstep_gauge $gauge" >> temp
  echo "traj_between_meas $Ntraj" >> temp
  echo "beta $beta" >> temp
  echo "beta_a $ratio" >> temp
  echo "mass $mass" >> temp
  echo "Hasenbusch_mass $MH" >> temp

  echo "alpha_hyp0 0.5" >> temp
  echo "alpha_hyp1 0.5" >> temp
  echo "alpha_hyp2 0.4" >> temp

  echo "npbp 5" >> temp
  echo "max_cg_iterations 5000" >> temp
  echo "max_cg_restarts 1" >> temp
  echo "error_per_site 1e-6" >> temp
  echo "reload_serial $lat.$i" >> temp
  echo "save_serial $lat.$next" >> temp
  echo "EOF" >> temp

  echo "echo \"=== MPI application finished at \"\`date\`\" ===\" >> $out" >> temp
  # Extract order parameter building blocks at runtime
  Sout=$dir/Out/Sout_${start}_${L}${Nt}_${beta}_${ratio}_$mass.$next
  echo "/oasis/scratch/dschaich/temp_project/extract_params $out $Sout" >> temp
  echo "chmod 666 $out $Sout $lat.$i* $lat.$next*" >> temp
  echo "" >> temp
done

qsub temp
rm -f temp

echo "Requested $time to run $iter jobs"
echo -ne "  The latest file in this ensemble is "
ls -tr Out/out_${start}_${L}${Nt}_${beta}_${ratio}_$mass.* | tail -n 1
echo     "The first file this job will write is Out/out_${start}_${L}${Nt}_${beta}_${ratio}_$mass.$count"
echo "Cancel the job if this doesn't look right"

test=$dir/Out/out_${start}_${L}${Nt}_${beta}_${ratio}_$mass.$count
if [ -f $test ]; then
 echo "WARNING! FILE EXISTS: $test"
fi

check=$[$count+1]
test=$dir/Configs/gauge_${L}${Nt}_${beta}_${ratio}_${mass}_$start.$check
if [ -f $test ]; then
 echo "WARNING! FILE $test"
 echo "         EXISTS AND WILL BE OVERWRITTEN!"
fi
